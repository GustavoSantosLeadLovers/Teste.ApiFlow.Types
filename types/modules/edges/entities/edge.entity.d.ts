import { z } from 'zod';
export declare const EdgeInputSchema: z.ZodObject<{
    flowId: z.ZodString;
    source: z.ZodString;
    target: z.ZodString;
    type: z.ZodOptional<z.ZodString>;
    sourceHandle: z.ZodOptional<z.ZodString>;
    targetHandle: z.ZodOptional<z.ZodString>;
    label: z.ZodOptional<z.ZodString>;
    labelStyle: z.ZodOptional<z.ZodString>;
    labelShowBg: z.ZodOptional<z.ZodBoolean>;
    labelBgStyle: z.ZodOptional<z.ZodString>;
    labelBgPadding: z.ZodOptional<z.ZodString>;
    labelBgBorderRadius: z.ZodOptional<z.ZodNumber>;
    style: z.ZodOptional<z.ZodString>;
    animated: z.ZodOptional<z.ZodBoolean>;
    hidden: z.ZodOptional<z.ZodBoolean>;
    deletable: z.ZodOptional<z.ZodBoolean>;
    focusable: z.ZodOptional<z.ZodBoolean>;
    data: z.ZodOptional<z.ZodString>;
    className: z.ZodOptional<z.ZodString>;
    sourceNode: z.ZodOptional<z.ZodString>;
    targetNode: z.ZodOptional<z.ZodString>;
    selected: z.ZodOptional<z.ZodBoolean>;
    markerStart: z.ZodOptional<z.ZodString>;
    markerEnd: z.ZodOptional<z.ZodString>;
    zIndex: z.ZodOptional<z.ZodNumber>;
    ariaLabel: z.ZodOptional<z.ZodString>;
    interactionWidth: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    data?: string | undefined;
    type?: string | undefined;
    sourceHandle?: string | undefined;
    targetHandle?: string | undefined;
    label?: string | undefined;
    labelStyle?: string | undefined;
    labelShowBg?: boolean | undefined;
    labelBgStyle?: string | undefined;
    labelBgPadding?: string | undefined;
    labelBgBorderRadius?: number | undefined;
    style?: string | undefined;
    animated?: boolean | undefined;
    hidden?: boolean | undefined;
    deletable?: boolean | undefined;
    focusable?: boolean | undefined;
    className?: string | undefined;
    sourceNode?: string | undefined;
    targetNode?: string | undefined;
    selected?: boolean | undefined;
    markerStart?: string | undefined;
    markerEnd?: string | undefined;
    zIndex?: number | undefined;
    ariaLabel?: string | undefined;
    interactionWidth?: number | undefined;
    flowId: string;
    source: string;
    target: string;
}, {
    data?: string | undefined;
    type?: string | undefined;
    sourceHandle?: string | undefined;
    targetHandle?: string | undefined;
    label?: string | undefined;
    labelStyle?: string | undefined;
    labelShowBg?: boolean | undefined;
    labelBgStyle?: string | undefined;
    labelBgPadding?: string | undefined;
    labelBgBorderRadius?: number | undefined;
    style?: string | undefined;
    animated?: boolean | undefined;
    hidden?: boolean | undefined;
    deletable?: boolean | undefined;
    focusable?: boolean | undefined;
    className?: string | undefined;
    sourceNode?: string | undefined;
    targetNode?: string | undefined;
    selected?: boolean | undefined;
    markerStart?: string | undefined;
    markerEnd?: string | undefined;
    zIndex?: number | undefined;
    ariaLabel?: string | undefined;
    interactionWidth?: number | undefined;
    flowId: string;
    source: string;
    target: string;
}>;
export declare const EdgeOutputSchema: z.ZodObject<{
    id: z.ZodString;
    flowId: z.ZodString;
    source: z.ZodString;
    target: z.ZodString;
    type: z.ZodOptional<z.ZodString>;
    sourceHandle: z.ZodOptional<z.ZodString>;
    targetHandle: z.ZodOptional<z.ZodString>;
    label: z.ZodOptional<z.ZodString>;
    labelStyle: z.ZodOptional<z.ZodString>;
    labelShowBg: z.ZodOptional<z.ZodBoolean>;
    labelBgStyle: z.ZodOptional<z.ZodString>;
    labelBgPadding: z.ZodOptional<z.ZodString>;
    labelBgBorderRadius: z.ZodOptional<z.ZodNumber>;
    style: z.ZodOptional<z.ZodString>;
    animated: z.ZodOptional<z.ZodBoolean>;
    hidden: z.ZodOptional<z.ZodBoolean>;
    deletable: z.ZodOptional<z.ZodBoolean>;
    focusable: z.ZodOptional<z.ZodBoolean>;
    data: z.ZodOptional<z.ZodString>;
    className: z.ZodOptional<z.ZodString>;
    sourceNode: z.ZodOptional<z.ZodString>;
    targetNode: z.ZodOptional<z.ZodString>;
    selected: z.ZodOptional<z.ZodBoolean>;
    markerStart: z.ZodOptional<z.ZodString>;
    markerEnd: z.ZodOptional<z.ZodString>;
    zIndex: z.ZodOptional<z.ZodNumber>;
    ariaLabel: z.ZodOptional<z.ZodString>;
    interactionWidth: z.ZodOptional<z.ZodNumber>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodOptional<z.ZodDate>;
}, "strip", z.ZodTypeAny, {
    data?: string | undefined;
    type?: string | undefined;
    sourceHandle?: string | undefined;
    targetHandle?: string | undefined;
    label?: string | undefined;
    labelStyle?: string | undefined;
    labelShowBg?: boolean | undefined;
    labelBgStyle?: string | undefined;
    labelBgPadding?: string | undefined;
    labelBgBorderRadius?: number | undefined;
    style?: string | undefined;
    animated?: boolean | undefined;
    hidden?: boolean | undefined;
    deletable?: boolean | undefined;
    focusable?: boolean | undefined;
    className?: string | undefined;
    sourceNode?: string | undefined;
    targetNode?: string | undefined;
    selected?: boolean | undefined;
    markerStart?: string | undefined;
    markerEnd?: string | undefined;
    zIndex?: number | undefined;
    ariaLabel?: string | undefined;
    interactionWidth?: number | undefined;
    updatedAt?: Date | undefined;
    id: string;
    flowId: string;
    source: string;
    target: string;
    createdAt: Date;
}, {
    data?: string | undefined;
    type?: string | undefined;
    sourceHandle?: string | undefined;
    targetHandle?: string | undefined;
    label?: string | undefined;
    labelStyle?: string | undefined;
    labelShowBg?: boolean | undefined;
    labelBgStyle?: string | undefined;
    labelBgPadding?: string | undefined;
    labelBgBorderRadius?: number | undefined;
    style?: string | undefined;
    animated?: boolean | undefined;
    hidden?: boolean | undefined;
    deletable?: boolean | undefined;
    focusable?: boolean | undefined;
    className?: string | undefined;
    sourceNode?: string | undefined;
    targetNode?: string | undefined;
    selected?: boolean | undefined;
    markerStart?: string | undefined;
    markerEnd?: string | undefined;
    zIndex?: number | undefined;
    ariaLabel?: string | undefined;
    interactionWidth?: number | undefined;
    updatedAt?: Date | undefined;
    id: string;
    flowId: string;
    source: string;
    target: string;
    createdAt: Date;
}>;
export type EdgeInputEntity = z.infer<typeof EdgeInputSchema>;
export type EdgeOutputEntity = z.infer<typeof EdgeOutputSchema>;
